# /* ---- üí´ https://github.com/JaKooLit üí´ ---- */  #
# Default Keybinds
# visit https://wiki.hyprland.org/Configuring/Binds/ for more info

$mainMod = SUPER
# Default
$scriptsDir = $HOME/.config/hypr/scripts
$configs = $HOME/.config/hypr/configs
# User
$UserConfigs = $HOME/.config/hypr/UserConfigs
$UserScripts = $HOME/.config/hypr/UserScripts

bind = CTRL ALT, Delete, exec, hyprctl dispatch exit 0
bind = $mainMod, Q, killactive,
# bind = $mainMod, Space, exec, rofi -show drun
bind = $mainMod, Space, exec, bash $HOME/.config/rofi/bin/rofilaunch.sh
bind = CTRL ALT, return, fullscreen
# bind = $mainMod SHIFT, Q, exec, $scriptsDir/KillActiveProcess.sh
bind = $mainMod CTRL, F, togglefloating,
# bind = $mainMod ALT, F, exec, hyprctl dispatch workspaceopt allfloat
bind = $mainMod CTRL, Q, exec, bash $scriptsDir/LockScreen.sh
bind = CTRL ALT, P, exec, bash $scriptsDir/Wlogout.sh

# FEATURES / EXTRAS
# bind = $mainMod, H, exec, bash $scriptsDir/KeyHints.sh # Small help file
bind = $mainMod ALT, R, exec, bash $scriptsDir/Refresh.sh # Refresh waybar, swaync, rofi
bind = $mainMod ALT, E, exec, bash $scriptsDir/RofiEmoji.sh # emoji
# bind = $mainMod, S, exec, bash $scriptsDir/RofiSearch.sh # Google search from Rofi
bind = $mainMod ALT, L, exec, bash $scriptsDir/ChangeLayout.sh # Toggle Master or Dwindle Layout
bind = $mainMod ALT, V, exec, bash $scriptsDir/ClipManager.sh # Clipboard Manager
# bind = $mainMod SHIFT, N, exec, swaync-client -t -sw # swayNC panel

# FEATURES / EXTRAS (UserScripts)
bind = $mainMod SHIFT CTRL, I, exec, bash $UserScripts/WallpaperSelect.sh # Select wallpaper to apply
# bind = $mainMod SHIFT, W, exec, $UserScripts/WallpaperEffects.sh # Wallpaper Effects by imagemagickWW
bind = CTRL ALT, W, exec, bash $UserScripts/WallpaperRandom.sh # Random wallpapers
bind = $mainMod ALT, O, exec, hyprctl setprop active opaque toggle #disable opacity to active window

# Waybar / Bar related
# bind = $mainMod, B, exec, pkill -SIGUSR1 waybar # Toggle hide/show waybar

# Master Layout
bind = $mainMod CTRL, D, layoutmsg, removemaster
bind = $mainMod, I, layoutmsg, addmaster
# bind = $mainMod, J, layoutmsg, cyclenext
# bind = $mainMod, K, layoutmsg, cycleprev
bind = $mainMod, M, exec, hyprctl dispatch splitratio 0.3
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod CTRL, Return, layoutmsg, swapwithmaster

# group
bind = $mainMod, G, togglegroup
bind = $mainMod CTRL, tab, changegroupactive #change focus to another window

# Cycle windows if floating bring to top
bind = ALT, tab, cyclenext
bind = ALT, tab, bringactivetotop

# Special Keys / Hot Keys
bindel = , xf86audioraisevolume, exec, bash $scriptsDir/Volume.sh --inc #volume up
bindel = , xf86audiolowervolume, exec, bash $scriptsDir/Volume.sh --dec #volume down
bindl = , xf86AudioMicMute, exec, bash $scriptsDir/Volume.sh --toggle-mic #mute mic
bindl = , xf86audiomute, exec, bash $scriptsDir/Volume.sh --toggle
bindl = , xf86Sleep, exec, systemctl suspend # sleep button
bindl = , xf86Rfkill, exec, bash $scriptsDir/AirplaneMode.sh #Airplane mode

# media controls using keyboards
bindl = , xf86AudioPlayPause, exec, bash $scriptsDir/MediaCtrl.sh --pause
bindl = , xf86AudioPause, exec, bash $scriptsDir/MediaCtrl.sh --pause
bindl = , xf86AudioPlay, exec, bash $scriptsDir/MediaCtrl.sh --pause
bindl = , xf86AudioNext, exec, bash $scriptsDir/MediaCtrl.sh --nxt
bindl = , xf86AudioPrev, exec, bash $scriptsDir/MediaCtrl.sh --prv
bindl = , xf86audiostop, exec, bash $scriptsDir/MediaCtrl.sh --stop

# Screenshot keybindings NOTE: You may need to press Fn key as well
# bind = $mainMod, Print, exec, bash $scriptsDir/ScreenShot.sh --now
# bind = $mainMod SHIFT, Print, exec, bash $scriptsDir/ScreenShot.sh --area
# bind = $mainMod CTRL, Print, exec, bash $scriptsDir/ScreenShot.sh --in5 #screenshot in 5 secs
# bind = $mainMod CTRL SHIFT, Print, exec, bash $scriptsDir/ScreenShot.sh --in10 #screenshot in 10 secs
bind = $mainMod CTRL, S, exec, bash $scriptsDir/ScreenShot.sh --active --swappy#take screenshot of active window

# screenshot with swappy (another screenshot tool)
bind = $mainMod CTRL, A, exec, bash $scriptsDir/ScreenShot.sh --swappy

# Resize windows
binde = CTRL SHIFT, left, resizeactive,-50 0
binde = CTRL SHIFT, right, resizeactive,50 0
binde = CTRL SHIFT, up, resizeactive,0 -50
binde = CTRL SHIFT, down, resizeactive,0 50

# Move windows
# bind = CTRL ALT, left, movewindow, l
# bind = CTRL ALT, right, movewindow, r
# bind = CTRL ALT, up, movewindow, u
# bind = CTRL ALT, down, movewindow, d

# ÁßªÂä®Á™óÂè£Âà∞ÊåáÂÆöÊñπÂêë
bind=CTRL ALT, left, exec, bash $scriptsDir/MoveWindow.sh left
bind=CTRL ALT, right, exec, bash $scriptsDir/MoveWindow.sh right
bind=CTRL ALT, up, exec, bash $scriptsDir/MoveWindow.sh up
bind=CTRL ALT, down, exec, bash $scriptsDir/MoveWindow.sh down

# ÁßªÂä®Á™óÂè£Âà∞ËßíËêΩ
bind=CTRL ALT,u,exec, bash $scriptsDir/MoveWindow.sh top-left
bind=CTRL ALT,i,exec, bash $scriptsDir/MoveWindow.sh top-right
bind=CTRL ALT,j,exec, bash $scriptsDir/MoveWindow.sh bottom-left
bind=CTRL ALT,k,exec, bash $scriptsDir/MoveWindow.sh bottom-right

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Workspaces related
bind = $mainMod, tab, workspace, m+1
bind = $mainMod SHIFT, tab, workspace, m-1

# Special workspace
bind = $mainMod SHIFT, U, movetoworkspace, special
bind = $mainMod, U, togglespecialworkspace,

# The following mappings use the key codes to better support various keyboard layouts
# 1 is code:10, 2 is code 11, etc
# Switch workspaces with mainMod + [0-9]
bind = $mainMod, code:10, workspace, 1
bind = $mainMod, code:11, workspace, 2
bind = $mainMod, code:12, workspace, 3
bind = $mainMod, code:13, workspace, 4
bind = $mainMod, code:14, workspace, 5
bind = $mainMod, code:15, workspace, 6
bind = $mainMod, code:16, workspace, 7
bind = $mainMod, code:17, workspace, 8
bind = $mainMod, code:18, workspace, 9
bind = $mainMod, code:19, workspace, 10

# Move active window and follow to workspace mainMod + SHIFT [0-9]
bind = $mainMod SHIFT, code:10, movetoworkspace, 1
bind = $mainMod SHIFT, code:11, movetoworkspace, 2
bind = $mainMod SHIFT, code:12, movetoworkspace, 3
bind = $mainMod SHIFT, code:13, movetoworkspace, 4
bind = $mainMod SHIFT, code:14, movetoworkspace, 5
bind = $mainMod SHIFT, code:15, movetoworkspace, 6
bind = $mainMod SHIFT, code:16, movetoworkspace, 7
bind = $mainMod SHIFT, code:17, movetoworkspace, 8
bind = $mainMod SHIFT, code:18, movetoworkspace, 9
bind = $mainMod SHIFT, code:19, movetoworkspace, 10
bind = $mainMod SHIFT, bracketleft, movetoworkspace, -1 # brackets [ or ]
bind = $mainMod SHIFT, bracketright, movetoworkspace, +1

# Move active window to a workspace silently mainMod + CTRL [0-9]
# bind = $mainMod CTRL, code:10, movetoworkspacesilent, 1
# bind = $mainMod CTRL, code:11, movetoworkspacesilent, 2
# bind = $mainMod CTRL, code:12, movetoworkspacesilent, 3
# bind = $mainMod CTRL, code:13, movetoworkspacesilent, 4
# bind = $mainMod CTRL, code:14, movetoworkspacesilent, 5
# bind = $mainMod CTRL, code:15, movetoworkspacesilent, 6
# bind = $mainMod CTRL, code:16, movetoworkspacesilent, 7
# bind = $mainMod CTRL, code:17, movetoworkspacesilent, 8
# bind = $mainMod CTRL, code:18, movetoworkspacesilent, 9
# bind = $mainMod CTRL, code:19, movetoworkspacesilent, 10
# bind = $mainMod CTRL, bracketleft, movetoworkspacesilent, -1 # brackets [ or ]
# bind = $mainMod CTRL, bracketright, movetoworkspacesilent, +1

# Scroll through existing workspaces with mainMod + scroll
# bind = $mainMod, mouse_down, workspace, e+1
# bind = $mainMod, mouse_up, workspace, e-1
# bind = $mainMod, period, workspace, e+1
# bind = $mainMod, comma, workspace, e-1
# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
